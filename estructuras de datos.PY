#Una estructura de datos es una forma organizada de almacenar y manipular datos. En programación, es común trabajar con grandes cantidades 
# de datos y para ello es necesario tener una forma de almacenarlos y acceder a ellos eficientemente. Existen varios tipos de estructuras de 
#datos, cada una con sus propias características y usos específicos.

#A continuación, te daré algunos ejemplos de estructuras de datos comunes en Python:
-------------------------------------------------------------------------------------------------------
#Listas: Una lista es una estructura de datos que permite almacenar una colección de valores, como números o cadenas de texto. 
# Los elementos de una lista se pueden acceder mediante su posición (índice) en la lista. Por ejemplo:
mi_lista = [1, 2, 3, "hola", "mundo"]
print(mi_lista[0]) # Imprime el primer elemento de la lista, que es 1
---------------------------------------------------------------------------------------------------
Diccionarios: #Un diccionario es una estructura de datos que permite almacenar pares de clave-valor. 
#Las claves son únicas y se utilizan para acceder a los valores correspondientes. Por ejemplo:
mi_diccionario = {"nombre": "Juan", "edad": 25, "ciudad": "Medellín"}
print(mi_diccionario["edad"]) # Imprime el valor asociado a la clave "edad", que es 25
----------------------------------------------------------------------------------------------------
Conjuntos: #Un conjunto es una estructura de datos que permite almacenar una colección de elementos únicos, es decir, sin duplicados.
#Los conjuntos son útiles para operaciones como la unión, intersección y diferencia entre conjuntos. Por ejemplo:
mi_conjunto = {1, 2, 3, 4}
print(2 in mi_conjunto) # Imprime True, ya que 2 está en el conjunto
----------------------------------------------------------------------------------------------------
Tuplas: #Una tupla es una estructura de datos similar a una lista, pero que no se puede modificar una vez creada.
#Las tuplas se utilizan cuando se necesita almacenar una secuencia de elementos que no va a cambiar. Por ejemplo:
mi_tupla = (1, 2, 3)
print(mi_tupla[1]) # Imprime el segundo elemento de la tupla, que es 2
----------------------------------------------------------------------------------------------------





